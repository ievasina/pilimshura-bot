from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext, ConversationHandler

# –¢–≤–æ–π API-—Ç–æ–∫–µ–Ω
TOKEN = "8083534238:AAFWBxn8kRXRd_Dc9HCFyDMsNZMKSEP-dH8"

# ID –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞ (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π)
CHANNEL_ID = "-1002323991792"

# –≠—Ç–∞–ø—ã –¥–∏–∞–ª–æ–≥–∞
ROLE_SELECTION, SECOND_QUESTION = range(2)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏
role_keyboard = [
    ["üíÖ –Ø –º–∞—Å—Ç–µ—Ä ‚Äì —Ä–∞–±–æ—Ç–∞—é –≤ —Å–∞–ª–æ–Ω–µ –∏–ª–∏ –Ω–∞ —Å–µ–±—è."],
    ["‚ú® –î–µ–ª–∞—é –º–∞–Ω–∏–∫—é—Ä —Å–µ–±–µ ‚Äì —Ö–æ—á—É —É—Ö–∞–∂–∏–≤–∞—Ç—å –∑–∞ –Ω–æ–≥—Ç—è–º–∏ –¥–æ–º–∞."],
    ["üëÄ –ü—Ä–æ—Å—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Å—å ‚Äì —Ö–æ—á—É —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –ø—Ä–æ –ø–∏–ª–æ—á–Ω—ã–π –º–∞–Ω–∏–∫—é—Ä."],
    ["üìö –Ø –º–∞—Å—Ç–µ—Ä –∏ —Ö–æ—á—É –ø–æ–≤—ã—à–∞—Ç—å –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é ‚Äì –∏—â—É –æ–±—É—á–µ–Ω–∏–µ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã."]
]
markup_role = ReplyKeyboardMarkup(role_keyboard, one_time_keyboard=True, resize_keyboard=True)

# –í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã –¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤
experience_keyboard = [
    ["üÜï –¢–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞—é (–¥–æ 1 –≥–æ–¥–∞)."],
    ["‚úÇÔ∏è 1-3 –≥–æ–¥–∞."],
    ["üé® 3-5 –ª–µ—Ç."],
    ["üèÜ –ë–æ–ª–µ–µ 5 –ª–µ—Ç."]
]
markup_experience = ReplyKeyboardMarkup(experience_keyboard, one_time_keyboard=True, resize_keyboard=True)

# –í–∞—Ä–∏–∞–Ω—Ç—ã —á–∞—Å—Ç–æ—Ç—ã –º–∞–Ω–∏–∫—é—Ä–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
personal_care_keyboard = [
    ["üíÖ –†–µ–¥–∫–æ, —Ä–∞–∑ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Å—è—Ü–µ–≤."],
    ["üñåÔ∏è –†–µ–≥—É–ª—è—Ä–Ω–æ, –Ω–æ –±–µ–∑ –æ—Å–æ–±—ã—Ö —Ç–µ—Ö–Ω–∏–∫."],
    ["üé® –û—Å–≤–æ–∏–ª–∞ –ø–∏–ª–æ—á–Ω—ã–π –º–∞–Ω–∏–∫—é—Ä –∏ –¥–µ–ª–∞—é –µ–≥–æ —Å–µ–±–µ."],
    ["üíé –õ—é–±–ª—é —Å–ª–æ–∂–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã."]
]
markup_personal_care = ReplyKeyboardMarkup(personal_care_keyboard, one_time_keyboard=True, resize_keyboard=True)

# –í–∞—Ä–∏–∞–Ω—Ç—ã –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤
curious_keyboard = [
    ["üìñ –•–æ—á—É –ø–æ–Ω—è—Ç—å, —á—Ç–æ —Ç–∞–∫–æ–µ –ø–∏–ª–æ—á–Ω—ã–π –º–∞–Ω–∏–∫—é—Ä."],
    ["üëÄ –õ—é–±–ª—é —Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –ø—Ä–æ –º–∞–Ω–∏–∫—é—Ä."],
    ["üõ† –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∫–∞–∫ –¥–µ–ª–∞—é—Ç –º–∞—Å—Ç–µ—Ä–∞."],
    ["‚ùì –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ —á–∏—Ç–∞—é, –±–µ–∑ —Ü–µ–ª–∏."]
]
markup_curious = ReplyKeyboardMarkup(curious_keyboard, one_time_keyboard=True, resize_keyboard=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: CallbackContext) -> int:
    user = update.message.from_user
    await update.message.reply_text(
        f"üìå –ü—Ä–∏–≤–µ—Ç, {user.first_name}! –ß—Ç–æ–±—ã –≤—Å—Ç—É–ø–∏—Ç—å –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª **Pilim Shura**, –æ—Ç–≤–µ—Ç—å –Ω–∞ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤.",
        reply_markup=markup_role
    )
    return ROLE_SELECTION

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫–æ –≤—Ç–æ—Ä–æ–º—É –≤–æ–ø—Ä–æ—Å—É
async def role_selection(update: Update, context: CallbackContext) -> int:
    user_response = update.message.text
    context.user_data["role"] = user_response

    if "–Ø –º–∞—Å—Ç–µ—Ä" in user_response or "–Ø –º–∞—Å—Ç–µ—Ä –∏ —Ö–æ—á—É –ø–æ–≤—ã—à–∞—Ç—å –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é" in user_response:
        await update.message.reply_text("‚úÖ –ö–∞–∫–æ–π —É —Ç–µ–±—è –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã?", reply_markup=markup_experience)
    elif "–î–µ–ª–∞—é –º–∞–Ω–∏–∫—é—Ä —Å–µ–±–µ" in user_response:
        await update.message.reply_text("‚úÖ –ö–∞–∫ —á–∞—Å—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å –º–∞–Ω–∏–∫—é—Ä?", reply_markup=markup_personal_care)
    elif "–ü—Ä–æ—Å—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Å—å" in user_response:
        await update.message.reply_text("‚úÖ –ß—Ç–æ —Ç–µ–±–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ?", reply_markup=markup_curious)
    
    return SECOND_QUESTION

# –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Å—ã–ª–∫–∏
async def second_question(update: Update, context: CallbackContext) -> int:
    user = update.message.from_user
    user_id = user.id
    username = user.username or "–ë–µ–∑ –∏–º–µ–Ω–∏"
    first_name = user.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"
    role = context.user_data.get("role", "–ù–µ —É–∫–∞–∑–∞–Ω")
    second_answer = update.message.text

    # –õ–æ–≥–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Å–æ–ª–∏ (—á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ)
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {first_name} (@{username}) | ID: {user_id}")
    print(f"–†–æ–ª—å: {role}")
    print(f"–î–æ–ø. –æ—Ç–≤–µ—Ç: {second_answer}")
    print("-" * 30)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
    with open("users_data.txt", "a", encoding="utf-8") as file:
        file.write(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {first_name} (@{username}) | ID: {user_id}\n")
        file.write(f"–†–æ–ª—å: {role}\n")
        file.write(f"–î–æ–ø. –æ—Ç–≤–µ—Ç: {second_answer}\n")
        file.write("-" * 30 + "\n")

    await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç—ã! –¢–µ–ø–µ—Ä—å –±–æ—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç –≤–∞—Å –≤ –∫–∞–Ω–∞–ª.")
    await update.message.reply_text(f"üîó [–í—Å—Ç—É–ø–∏—Ç—å –≤ –∫–∞–Ω–∞–ª](t.me/PilimShura)", parse_mode="Markdown")

    return ConversationHandler.END

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    application = Application.builder().token(TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            ROLE_SELECTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, role_selection)],
            SECOND_QUESTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, second_question)]
        },
        fallbacks=[]
    )

    application.add_handler(conv_handler)
    application.run_polling()

if __name__ == "__main__":
    main()